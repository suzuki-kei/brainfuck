NAME
    brainfuck - brainfuck language implementaiton

SYNOPSIS
    brainfuck [OPTION...] [FILE...]
    brainfuck SUBCOMMAND [SUBCOMMAND_OPTION...] [FILE...]

DESCRIPTION
    The brainfuck has the following mode:
        * interpreter mode (if no subcommand specified)
        * build-string-generator mode (if the build-string-generator subcommand specified)
        * output-string-generator mode (if the output-string-generator subcommand specified)
        * code-map-generator mode (if the code-map-generator subcommand specified)
        * minifier mode (if the minify subcommand specified)

    In every mode, input (e.g. source code) can be specified from standard input or file.

SUBCOMMANDS
    build-string-generator
        Generates brainfuck code that builds the specified string.

    output-string-generator
        Generates brainfuck code that outputs the specified string.
        see OUTPUT STRING GENERATOR OPTIONS for details.

    code-map-generator
        Prints shortest code to make each cell value.

    minify
        Removes non command characters from specified brainfuck code.

OPTIONS
    -h, --help
        Prints help message and exit.

BUILD STRING GENERATOR SUBCOMMAND OPTIONS
    no options.

OUTPUT STRING GENERATOR SUBCOMMAND OPTIONS
    -a, algorithm-all
        Generates brainfuck code from all generators and outputs the shortest one.

    -1, --algorithm-1
        Generates brainfuck code that outputs the specified string with algorithm-1.
        see OUTPUT STRING GENERATOR ALGORITHM-1 DETAILS for details.

    -2, --algorithm-2
        Generates brainfuck code that outputs the specified string with algorithm-2.
        see OUTPUT STRING GENERATOR ALGORITHM-2 DETAILS for details.

    -3, --algorithm-3
        Generates brainfuck code that outputs the specified string with algorithm-3.
        see OUTPUT STRING GENERATOR ALGORITHM-3 DETAILS for details.

    -4, --algorithm-4
        Generates brainfuck code that outputs the specified string with algorithm-4.
        see OUTPUT STRING GENERATOR ALGORITHM-4 DETAILS for details.

CODE MAP GENERATOR SUBCOMMAND OPTIONS
    no options.

MINIFY SUBCOMMAND OPTIONS
    no options.

OUTPUT STRING GENERATOR ALGORITHM-1 DETAILS
    Makes target character code by repeating + command.

    Example:
        $ echo -n 'ABC' | brainfuck generate -1
        203
        +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>
        ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>
        +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.

OUTPUT STRING GENERATOR ALGORITHM-2 DETAILS
    Improved version of algorithm-1.
    If code will be shorter, makes target character code based on previous value.

    Example:
        $ echo -n 'Hello, World!' | brainfuck generate -2
        311
        ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
        +++++++++++++++++++++++++++++.
        +++++++.
        .
        +++.
        >++++++++++++++++++++++++++++++++++++++++++++.
        ------------.
        +++++++++++++++++++++++++++++++++++++++++++++++++++++++.
        ++++++++++++++++++++++++.
        +++.
        ------.
        --------.
        >+++++++++++++++++++++++++++++++++.

OUTPUT STRING GENERATOR ALGORITHM-3 DETAILS
    Improved version of algorithm-2.
    If code will be shorter, makes target character code using loop.

    Example:
        $ echo -n 'Hello, World!' | brainfuck generate -3
        179
        >++++++++[-<+++++++++>]<.
        >++++[-<+++++++>]<+.
        +++++++.
        .
        +++.
        >>++++[-<+++++++++++>]<.
        ------------.
        >+++++[-<+++++++++++>]<.
        >++++[-<++++++>]<.
        +++.
        ------.
        --------.
        >>++++[-<++++++++>]<+.

OUTPUT STRING GENERATOR ALGORITHM-4 DETAILS
    First, makes several seed values.
    Next, makes target character codes by changing one of the seed values.

    Example:
        $ echo -n 'Hello, World!' | brainfuck generate -4
        120
        ++++++++
        [
            -
            >
            >+
            >++++++++
            >+++++
            >+++++++
            [++++<]
            <
        ]
        >>>>.
        <+++++.
        +++++++.
        .
        +++.
        <++++.
        ------------.
        >>>-.
        <<.
        +++.
        ------.
        --------.
        <+.

EXAMPLES
    Run in interpreter mode, specify source code by standard input:
        $ brainfuck

    Run in interpreter mode, specify source code by pipe:
        $ echo '+++++++++++++[->++++++++<]>.---.+++++++..+++.' | brainfuck
        hello

    Run in interpreter mode, specify source code by file:
        $ brainfuck src/samples/hello.b
        Hello, World!

    Run in build-string-generator mode (string builder):
        $ echo -n 'hello' | brainfuck generate -s
        >++++++++[-<+++++++++++++>]
        >++++++++++[-<++++++++++>]<+>
        >+++++++++[-<++++++++++++>]
        >+++++++++[-<++++++++++++>]
        >++++++++++[-<+++++++++++>]<+>

    Run in output-string-generator mode (algorithm-3), specify code by pipe:
        $ echo 'hello' | brainfuck generate -3
        58
        >++++++++[-<+++++++++++++>]<.
        ---.
        +++++++.
        .
        +++.
        >++++++++++.

    Run in minifier mode, specify source code by pipe:
        $ echo 'A+++++++++++++[-A>B++++++++B<A]A>B.---.+++++++..+++.' | brainfuck minify
        +++++++++++++[->++++++++<]>.---.+++++++..+++.

EXIT STATUS
    0 if success.
    1 if an error occurred.

